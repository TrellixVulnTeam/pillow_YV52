diff -rupN --no-dereference Pillow-7.2.0/src/PIL/PcxImagePlugin.py Pillow-7.2.0-new/src/PIL/PcxImagePlugin.py
--- Pillow-7.2.0/src/PIL/PcxImagePlugin.py	2020-06-30 09:50:35.000000000 +0200
+++ Pillow-7.2.0-new/src/PIL/PcxImagePlugin.py	2021-03-06 11:40:18.072803599 +0100
@@ -64,13 +64,13 @@ class PcxImageFile(ImageFile.ImageFile):
         version = i8(s[1])
         bits = i8(s[3])
         planes = i8(s[65])
-        stride = i16(s, 66)
+        ignored_stride = i16(s, 66)
         logger.debug(
             "PCX version %s, bits %s, planes %s, stride %s",
             version,
             bits,
             planes,
-            stride,
+            ignored_stride,
         )
 
         self.info["dpi"] = i16(s, 12), i16(s, 14)
@@ -108,6 +108,11 @@ class PcxImageFile(ImageFile.ImageFile):
         self.mode = mode
         self._size = bbox[2] - bbox[0], bbox[3] - bbox[1]
 
+        # don't trust the passed in stride. Calculate for ourselves.
+        # CVE-2020-35655
+        stride = (self._size[0] * bits + 7) // 8
+        stride += stride % 2
+
         bbox = (0, 0) + self.size
         logger.debug("size: %sx%s", *self.size)
 
diff -rupN --no-dereference Pillow-7.2.0/Tests/test_image.py Pillow-7.2.0-new/Tests/test_image.py
--- Pillow-7.2.0/Tests/test_image.py	2020-06-30 09:50:35.000000000 +0200
+++ Pillow-7.2.0-new/Tests/test_image.py	2021-03-06 11:40:18.073803599 +0100
@@ -653,25 +653,29 @@ class TestImage:
         with pytest.warns(DeprecationWarning):
             assert test_module.PILLOW_VERSION > "7.0.0"
 
-    def test_overrun(self):
-        """ For overrun completeness, test as:
-        valgrind pytest -qq Tests/test_image.py::TestImage::test_overrun | grep decode.c
-        """
-        for file in [
+    @pytest.mark.parametrize("path", [
             "fli_overrun.bin",
             "sgi_overrun.bin",
             "sgi_overrun_expandrow.bin",
             "sgi_overrun_expandrow2.bin",
             "pcx_overrun.bin",
             "pcx_overrun2.bin",
+            "ossfuzz-4836216264589312.pcx",
             "01r_00.pcx",
-        ]:
-            with Image.open(os.path.join("Tests/images", file)) as im:
-                try:
-                    im.load()
-                    assert False
-                except OSError as e:
-                    assert str(e) == "buffer overrun when reading image file"
+        ])
+    def test_overrun(self, path):
+        """For overrun completeness, test as:
+        valgrind pytest -qq Tests/test_image.py::TestImage::test_overrun | grep decode.c
+        """
+        with Image.open(os.path.join("Tests/images", path)) as im:
+            try:
+                im.load()
+                assert False
+            except OSError as e:
+                assert (str(e) == "buffer overrun when reading image file" or
+                        "image file is truncated" in str(e))
+
+    def test_fli_overrun2(self):
 
         with Image.open("Tests/images/fli_overrun2.bin") as im:
             try:
